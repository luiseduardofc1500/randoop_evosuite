/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 13 05:16:56 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.Calculadora;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Calculadora_ESTest extends Calculadora_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.porcentagem((-1616), 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrair((-1), (-611));
      assertEquals(610, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrair(0, 1126);
      assertEquals((-1126), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somar(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somar((-3494), (-986));
      assertEquals((-4480), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.raizQuadrada(1);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.potencia((-1616), 415);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.potencia((-1), 1);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.porcentagem(10, (-3494));
      assertEquals((-34940.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicar((-704), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicar(1, (-2597));
      assertEquals((-2597), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.dividir(0, 939);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.dividir(2521, (-2140));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      // Undeclared exception!
      calculadora0.potencia(415, 481568);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.porcentagem((-1117), (-1431));
      assertEquals(1598427.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.porcentagem(0, 1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.potencia(1, 1);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      // Undeclared exception!
      try { 
        calculadora0.potencia(0, (-2734));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // N\u00E3o \u00E9 poss\u00EDvel calcular para n\u00FAmeros negativos.
         //
         verifyException("com.example.Calculadora", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.potencia(0, 0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      // Undeclared exception!
      try { 
        calculadora0.raizQuadrada((-1945));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // N\u00E3o \u00E9 poss\u00EDvel calcular a raiz quadrada de um n\u00FAmero negativo.
         //
         verifyException("com.example.Calculadora", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.raizQuadrada(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      // Undeclared exception!
      try { 
        calculadora0.dividir(0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Divis\u00E3o por zero n\u00E3o permitida.
         //
         verifyException("com.example.Calculadora", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.dividir((-1), (-1));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somar(1454, 1454);
      assertEquals(2908, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrair(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicar(1, 1);
      assertEquals(1, int0);
  }
}
